<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nanoFramework.NetworkHelper</name>
    </assembly>
    <members>
        <member name="T:nanoFramework.Networking.ConnectionError">
            <summary>
            Connection Error class
            </summary>
        </member>
        <member name="M:nanoFramework.Networking.ConnectionError.#ctor(System.String,System.Exception)">
            <summary>
            Connection Error class constructor
            </summary>
            <param name="error">Error message.</param>
            <param name="ex">Exception</param>
        </member>
        <member name="P:nanoFramework.Networking.ConnectionError.Error">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:nanoFramework.Networking.ConnectionError.Exception">
            <summary>
            The possible Exception
            </summary>
        </member>
        <member name="T:nanoFramework.Networking.IPConfiguration">
            <summary>
            IP configuration used for static IP address configuration.
            </summary>
        </member>
        <member name="M:nanoFramework.Networking.IPConfiguration.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for IP Configuration.
            </summary>
            <param name="ipAddress">The static IP address.</param>
            <param name="ipSubnetMask">The IP subnet mask address.</param>
            <param name="ipGatewayAddress">The IP gateway address.</param>
        </member>
        <member name="P:nanoFramework.Networking.IPConfiguration.IPAddress">
            <summary>
            Gets or sets the static IP Address.
            </summary>
        </member>
        <member name="P:nanoFramework.Networking.IPConfiguration.IPSubnetMask">
            <summary>
            Gets or sets the IP subnet mask address.
            </summary>
        </member>
        <member name="P:nanoFramework.Networking.IPConfiguration.IPGatewayAddress">
            <summary>
            Gets or sets the he IP gateway address.
            </summary>
        </member>
        <member name="T:nanoFramework.Networking.NetworkHelper">
            <summary>
            Network helper class to connect easily to WiFi networks
            </summary>
        </member>
        <member name="P:nanoFramework.Networking.NetworkHelper.ConnectionError">
            <summary>
            The error connection type
            </summary>
        </member>
        <member name="M:nanoFramework.Networking.NetworkHelper.ConnectWifiDhcp(System.String,System.String,Windows.Devices.WiFi.WiFiReconnectionKind,System.Boolean,System.Int32,System.Threading.CancellationToken)">
            <summary>
            This function will connect the network with DHCP enabled, for your SSID and try to connect to it with the credentials you've passed. This will save as well
            the configuration of your network.
            </summary>
            <param name="ssid">The SSID you are trying to connect to.</param>
            <param name="password">The password associated to the SSID you are trying to connect to.</param>
            <param name="reconnectionKind">The reconnection type to the network.</param>
            <param name="setDateTime">True to wait for a valid date time.</param>
            <param name="wifiAdapter">The WiFi adapter to be used. Relevant only if you have multiple WiFi adapters.</param>
            <param name="token">A cancellation token used for timeout.</param>
            <returns>True if success. If no success a more detailed error message available in the ConnectionError property</returns>
        </member>
        <member name="M:nanoFramework.Networking.NetworkHelper.ConnectWifiFixAddress(System.String,System.String,nanoFramework.Networking.IPConfiguration,Windows.Devices.WiFi.WiFiReconnectionKind,System.Boolean,System.Int32,System.Threading.CancellationToken)">
            <summary>
            This function will connect the network with the static IP address you are providing, for your SSID and try to connect to it with the credentials you've passed. This will save as well
            the configuration of your network.
            </summary>
            <param name="ssid">The SSID you are trying to connect to.</param>
            <param name="password">The password associated to the SSID you are trying to connect to.</param>
            <param name="ipConfiguration">The static IP configuration you want to apply.</param>
            <param name="reconnectionKind">The reconnection type to the network.</param>
            <param name="setDateTime">True to wait for a valid date time.</param>
            <param name="wifiAdapter">The WiFi adapter to be used. Relevant only if you have multiple WiFi adapters.</param>
            <param name="token">A cancellation token used for timeout.</param>
            <returns>True if success. If no success a more detailed error message available in the ConnectionError property</returns>
        </member>
        <member name="M:nanoFramework.Networking.NetworkHelper.ScanAndConnectWifiDhcp(System.String,System.String,Windows.Devices.WiFi.WiFiReconnectionKind,System.Boolean,System.Int32,System.Threading.CancellationToken)">
            <summary>
            This function will scan and connect the network with DHCP enabled, for your SSID and try to connect to it with the credentials you've passed. This will save as well
            the configuration of your network. 
            </summary>
            <param name="ssid">The SSID you are trying to connect to.</param>
            <param name="password">The password associated to the SSID you are trying to connect to.</param>
            <param name="reconnectionKind">The reconnection type to the network.</param>
            <param name="setDateTime">True to wait for a valid date time.</param>
            <param name="wifiAdapter">The WiFi adapter to be used. Relevant only if you have multiple WiFi adapters.</param>
            <param name="token">A cancellation token used for timeout.</param>
            <returns>True if success. If no success a more detailed error message available in the ConnectionError property</returns>
        </member>
        <member name="M:nanoFramework.Networking.NetworkHelper.ReconnectWifi(System.Boolean,System.Int32,System.Threading.CancellationToken)">
            <summary>
            This function will connect the network, the information used to connect are the ones stored in the device.
            This function can be called only if an existing network has been setup previously and if the credentials are valid.
            </summary>
            <param name="setDateTime">True to wait for a valid date time.</param>
            <param name="wifiAdapter">The WiFi adapter to be used. Relevant only if you have multiple WiFi adapters.</param>
            <param name="token">A cancellation token used for timeout.</param>
            <returns>True if success. If no success a more detailed error message available in the ConnectionError property</returns>
        </member>
        <member name="M:nanoFramework.Networking.NetworkHelper.IsConfigurationStored(System.Int32)">
            <summary>
            Checks if a WiFi configuration is stored.
            </summary>
            <param name="wifiAdapter">The WiFi adapter to be used. Relevant only if you have multiple WiFi adapters.</param>
            <returns>True if a configuration is stored.</returns>
        </member>
        <member name="M:nanoFramework.Networking.NetworkHelper.WaitForValidIPAndDate(System.Boolean,System.Net.NetworkInformation.NetworkInterfaceType,System.Threading.CancellationToken)">
            <summary>
            Wait for a valid IP and potentially a date
            </summary>
            <param name="setDateTime">True to wait for a valid date</param>
            <param name="networkInterfaceType">The tye of interface.</param>
            <param name="token">A cancellation token</param>
            <returns>True if success</returns>
        </member>
        <member name="M:nanoFramework.Networking.NetworkHelper.IsValidDateTime">
            <summary>
            Check if the DateTime is valid.
            </summary>
            <returns>True if valid.</returns>
        </member>
        <member name="M:nanoFramework.Networking.NetworkHelper.IsValidIpAddress(System.Net.NetworkInformation.NetworkInterfaceType)">
            <summary>
            Check if there is a valid IP address on a specific interface type.
            </summary>
            <param name="interfaceType">The type of interface.</param>
            <returns>True if valid.</returns>
        </member>
    </members>
</doc>
